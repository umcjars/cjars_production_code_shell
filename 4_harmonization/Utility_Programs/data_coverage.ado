/*==============================================================================
Data Coverage
=============
Utility program to generate data coverage of CJARS data holdings. 
==============================================================================*/
#delimit;
program define data_coverage, rclass;

    syntax anything(name=dataset_id);

    local prepared="${anondir}1_prepared/`dataset_id'";
    
    local cleaned="${anondir}2_cleaned/`dataset_id'";
    
    local combined="${anondir}3_combined/`dataset_id'";
    
    local harmonize_code="${codedir}/4_harmonization/1_prepared/`dataset_id'";

	display "Processing data coverage for `dataset_id'";
	
	// Utility file for procesing structural breaks
	clear;
	set obs 60;
	gen year = [_n]-1 + 1960;
	tempfile years;
	save "`years'";
	
	// Eliminating non-data stubs
	clear;
	set obs 1;
	qui gen valid_datastub = regexm("`dataset_id'","/([0-9][0-9][0-9][0-9])") == 1;
	qui summ valid_datastub;
	clear;
	if r(mean) == 1{;
		tempfile to_file ;
		*Identifying active use status;
		quietly{;
			clear;
			import delim "${codedir}/Dataset.csv", varn(1) delim(",");
			keep if datasetid == "`dataset_id'";
			summ active_use;
			local status = r(mean);
		};
		*Figuring out cutoff point for clearly invalid dates;
		quietly{;
			clear;
			set obs 1;
			gen year = regexs(1) if regexm("`dataset_id'","/([0-9][0-9][0-9][0-9])") == 1;
			gen month = regexs(1) if regexm("`dataset_id'","/[0-9][0-9][0-9][0-9]([0-9][0-9])") == 1;
			destring year month, replace;
			summ year;
			local y = r(mean);
			summ month;
			local m = r(mean);
			local tm = tm(`y'm`m');
		};
		foreach data_table in arrest adjudication incarceration parole probation{;
			capture confirm file "`cleaned'/cleaned_`data_table'.dta";		
			if _rc==0 {;
				display "`data_table'";
				*quietly{;
					use "`cleaned'/cleaned_`data_table'.dta", replace;
					if "`data_table'" == "arrest"{;
						gen month = mofd(mdy(arr_arr_dt_mm, arr_arr_dt_dd, arr_arr_dt_yyyy));
						replace month = mofd(mdy(arr_book_dt_mm, arr_book_dt_dd, arr_book_dt_yyyy)) if month == .;		
						gen cjars_table = "ARR";
						rename (arr_st_ori_fips arr_cnty_ori_fips)(st_fips cnty_fips);
						gen snapshot_indicator = 0;	
					};
					if "`data_table'" == "adjudication"{;
						gen month = mofd(mdy(adj_file_dt_mm, adj_file_dt_dd, adj_file_dt_yyyy));
						replace month = mofd(mdy(adj_off_dt_mm, adj_off_dt_dd, adj_off_dt_yyyy)) if month == .;		
						replace month = mofd(mdy(adj_disp_dt_mm, adj_disp_dt_dd, adj_disp_dt_yyyy)) if month == .;		
						gen cjars_table = "ADJ_"+adj_grd_cd;
						if regexm("`dataset_id'","DOC") == 1 |  regexm("`dataset_id'","DPS") == 1{;
							replace adj_cnty_ori_fips = "statewide";
						};				
						rename (adj_st_ori_fips adj_cnty_ori_fips)(st_fips cnty_fips);
						gen snapshot_indicator = 0;	
					};
					if "`data_table'" == "incarceration"{;
						gen month = mofd(mdy(inc_entry_dt_mm, inc_entry_dt_dd, inc_entry_dt_yyyy));
						gen cjars_table = "INC";
						cap replace inc_st_ori_fips = inc_st_juris_fips;
						if regexm("`dataset_id'","St") == 1{;
							replace inc_cnty_ori_fips = "statewide";
						};
						rename (inc_st_ori_fips inc_cnty_ori_fips)(st_fips cnty_fips);
						summ inc_exit_dt_yyyy;
						gen snapshot_indicator = r(N) == 0;
					};
					if "`data_table'" == "parole"{;
						gen month = mofd(mdy(par_bgn_dt_mm, par_bgn_dt_dd, par_bgn_dt_yyyy));
						gen cjars_table = "PAR";
						cap replace par_st_ori_fips = par_st_juris_fips;
						if regexm("`dataset_id'","St") == 1{;
							replace par_cnty_ori_fips = "statewide";
						};
						rename (par_st_ori_fips par_cnty_ori_fips)(st_fips cnty_fips);
						summ par_end_dt_yyyy;
						gen snapshot_indicator = r(N) == 0;
					};
					if "`data_table'" == "probation"{;
						gen month = mofd(mdy(pro_bgn_dt_mm, pro_bgn_dt_dd, pro_bgn_dt_yyyy));
						gen cjars_table = "PRO";
						cap replace pro_st_ori_fips = pro_st_juris_fips;
						if regexm("`dataset_id'","St") == 1{;
							replace pro_cnty_ori_fips = "statewide";
						};
						rename (pro_st_ori_fips pro_cnty_ori_fips)(st_fips cnty_fips);
						summ pro_end_dt_yyyy;
						gen snapshot_indicator = r(N) == 0;					
					};
					summ snapshot_indicator;
					local caseload_snapshot = r(mean);
					format month %tm;
					drop if month == . | month > `tm';
					gen year = year(dofm(month));
					gen n = 1;
					drop if st_fips == "" | cnty_fips == "";
					levelsof cnty_fips, local(counties) clean;
					foreach cnty in `counties' {;
						preserve;
							display "`cnty'";
							keep if cnty_fips == "`cnty'";
							levelsof cjars_table, local(tables);
							tempfile basefile;
							save "`basefile'", replace;
							foreach t in `tables'{;
								if "`t'" == "ARR" | "`t'" == "ADJ_FE" | "`t'" == "ADJ_MI" | "`t'" == "INC" | "`t'" == "PRO" | "`t'" == "PAR"{;
									capture{;
										use "`basefile'", replace;
										keep if cjars_table == "`t'";
										collapse (sum) n, by(cjars_table st_fips cnty_fips year);
										gsort -year;
										replace year = 9999 if year != year[_n-1]-1 & year[_n-1]!= .;
										drop if year == 9999;
										merge 1:1 year using "`years'";
										replace n = 0 if n == .;
										summ n;
										sort year;
										gen n_back_up = n;
										replace n = (n_back_up[_n-1]+n_back_up[_n]+n_back_up[_n+1])/3 if n < r(max)/10;		
										drop n_back_up;
										drop if n == 0 & year >= 2015;
										*tsset year;
										*reg n ;
										*estat sbsingle ;
										sort year;
										gen annual_change = ((n+1)-(n[_n-1]+1))/(n[_n-1]+1);
										gen tomorrow_change = annual_change[_n+1];
										replace tomorrow_change = -0.1 if tomorrow_change == .;
										gen ratio = (1+tomorrow_change)/(1+annual_change);
										replace ratio = . if ratio <-0.1 | annual_change < 0.1;
										summ n if n != 0, d;
										replace ratio = . if n < r(p50)/10;
										egen min_ratio = min(ratio);
										summ annual_change tomorrow_change ratio, d;
										summ year if ratio == min_ratio;
										local year_start = r(mean);
										display "`year_start'";
										
										use "`basefile'", replace;
										keep if cjars_table == "`t'";
										collapse (sum) n, by(cjars_table st_fips cnty_fips month);
										gsort -month;
										replace month = 9999 if month - month[_n-1] > 3 & month[_n-1]!= .;
										drop if month == 9999;
										keep if inrange(month, tm(`year_start'm1)-24,tm(`year_start'm12)+24)==1;
										keep month n;
										tempfile monthly_data;
										save "`monthly_data'", replace;
										clear;
										set obs 60;
										gen month = [_n] - 1 + tm(`year_start'm1)- 24;
										merge 1:1 month using "`monthly_data'";
										replace n = 0 if n == .;
										ta month;
										tsset month;
										reg n ;
										estat sbsingle ;
										local break_month = r(breakdate);
										summ n if month == `break_month';
										if r(mean) == 0{;
											local break_month = `break_month'-1;
										};
										display "`break_month'";
									};
									use "`basefile'", replace;
									keep if cjars_table == "`t'";
									collapse (sum) n, by(cjars_table st_fips cnty_fips month);
									gsort -month;
									replace month = 9999 if month != month[_n-1]-1 & month[_n-1]!= .;
									drop if month == 9999;
									if _rc==0{;
										gen start_month = `break_month';
									};
									if _rc!=0{;
										summ month;
										gen start_month = r(min);
									};
									summ month;
									gen end_month = r(max);
									gen snapshot_start = start_month == end_month | start_month > r(min);
									collapse (min) start_month (max) end_month snapshot_start, by(cjars_table st_fips cnty_fips);
									format start_month %tm;
									format end_month %tm;
									gen datasetid = "`dataset_id'";
									gen coverage_source = "data-driven";

									tostring start_month end_month, usedisplayformat replace force;
									destring st_fips, replace;
									gen active_use = `status';
									capture confirm file "`to_file'";
									if _rc==0{;
										append using "`to_file'";
									};
									save "`to_file'", replace;
								};
							};
						restore;
					};				
				*};
			};
		};
		
		capture confirm file "`to_file'";
		if _rc==0{;	
			clear;
			import delim "${codedir}/utility/data_coverage_files/Dataset_Coverage.csv", varn(1) delim(",");
			drop if datasetid == "`dataset_id'" & coverage_source == "data-driven";
			append using "`to_file'";
			duplicates drop;

			keep datasetid cjars_table st_fips cnty_fips start_month end_month snapshot_start coverage_source active_use;
			sort datasetid cjars_table st_fips cnty_fips start_month end_month snapshot_start coverage_source active_use;
			export delim "${codedir}/utility/data_coverage_files/Dataset_Coverage.csv", replace delim(",") datafmt;	
		};
	};
	
end;
